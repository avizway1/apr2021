RDS : Relational database Service :
--> Amazon Aurora (mysql / postgresql compatable)
--> MS SQL		: SSMS (SQL Server Management studio)
--> MySQL		: Mysql Workbench
--> Oracle db		: toad
--> Mariadb		: workbench
--> postgreSQL		: pgadmin

Free Tier : 750 Hrs/Month, for db.t2.micro instance.
DaaS : No OS access.. 

** Most of the time we run db instances in "private Subnets". 

JUMP Server / ec2 instance (mysql workbench) --> rds instance in CustomVPC private subnet.

Step 1 : Choose the DB engine : Mysql

Step 2 : Choose template : FREE TIER

Production : Use defaults for high availability and fast, consistent performance.
Dev/Test : This instance is intended for development use outside of a production environment.
Free tier : Use RDS Free Tier to develop new applications, test existing applications, or gain hands-on experience with Amazon RDS.


DB instance identifier : Name for this DB instance.
Credentials Settings : Un : admin, Pwd: Setup/autogenerated.

DB Instance Class : FREE TIER : db.t2.micro

Storage : Only for database..  : Minimum: 20 GiB, Maximum: 16,384 GiB (16 TiB)
--> Gp2, io1/2, magnetic
Storage autoscaling : When the selected storage is full, it adds the astorage automatically.
Storage increments happens 
	--> 5 Gb
	--> 10% of currently allocated storage.

Connectivity : In what VPC you want to run this db. 

Public access :
Yes : Amazon EC2 instances and devices outside the VPC can connect to your database. Choose one or more VPC security groups that specify which EC2 instances and devices inside the VPC can connect to the database.

No : RDS will not assign a public IP address to the database. Only Amazon EC2 instances and devices inside the VPC can connect to your database.

VPC security group : MYSQL : 3306 : Open it to JUMPServerSG/WebServerSG
mysql : 1433

Database authentication : Password Authentication


Additional configuration : 
Initial database name: firstdb
Backup : If we enable this feature, AWS creates automatic backups for our RDS instance.
--> Backup Retention period : How many previous backup copies you want to have to restore.  (Max Retention period : 35 Days, Default : 7 Days)

Backup window : Select the period for which you want automated backups of the database to be created by Amazon RDS.

Enabling Enhanced monitoring : Metrics are useful when you want to see how different processes or threads use the CPU
Basic Monitoring : 5 Min
Enhanced Monitoring : 1 Min / 1 sec

Maintenance window : AT what time modifications on this db need to take effect.


** For RDS instance, We won;t get any IP address.. We will get Endpoint name.

mysql -u admin -p Avinash123 -h mysqldb.cors6zk8kbqy.ap-south-1.rds.amazonaws.com


Task : Launch postgresql in CustomVPCs Private Subnet, Launch an ec2 inance in CustomVPC Public Subnet, Install pgadmin.. get connect to postgresql rds db instance.

Task : Launch mysql in CustomVPCs Private Subnet, Launch an ec2 inance in CustomVPC Public Subnet, Install Mysql workbench.. get connect to mysqlsql rds db instance.

______________________________________________________________________________________

D: 21/05/2021


Multi-AZ deployment:  Creates a standby in a different Availability Zone (AZ) to provide data redundancy, eliminate I/O freezes, and minimize latency spikes during system backups.

ReadReplica : 

Promoting Read Replica : It will breakdown the replication from Primary to replica copy. Repica instance will become as individual instance. We can perform read and write operation.
--> Once we break the replication, we cannot establish it again. 
If required we can create another readreplica for the primary db.


nslookup dbendpoint
192.168.20.197 : ap-south-1a
192.168.58.113 : ap-south-1b



Amazon Aurora : 5 times better performance and cost is 1/10 th of other comemrcial databases. (NO FREE TIER ELIGIBILITY)
--> AWS Own database.
--> Max database size is : 128 TB
--> We have Mysql Compatable version & PostGreSql compatable version.
--> Serverless: No backend db instance maangement is required. We need to choose the req configurations. 
--> Provisioned (Server)s : Just like RDS, we will get backend db instance.
--> We can create 15 low latency read Replicas for Aurora db.































